@import "breakpoints";
@import "theme";

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

@mixin flex-col {
  display: flex;
  flex-direction: column;
}

@mixin  flex-col-center {
  @include flex-col;
  justify-content: center;
  align-items: center;
}

@mixin flex-col-content-center {
  @include flex-col;
  justify-content: center;
}

@mixin flex-row-content-between {
  @include flex-row;
  justify-content: space-between;
}

@mixin flex-row-items-center {
  @include flex-row;
  align-items: center;
}

@mixin flex-col-items-center {
  @include flex-col;
  align-items: center;
}

@mixin flex-row-center {
  @include flex-row-items-center;
  justify-content: center;
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin card-size($size) {
  $width: map-get($card-widths, $size);
  $height: map-get($card-heights, $size);

  @if $width and $height {
    max-width: $width;
    height: $height;

    @include mq("sm") {
      max-width: $card-mobile-width;
      height: $card-mobile-height;
    }
  } @else {
    @error "Invalid size '#{$size}' provided. Allowed sizes: #{join(map-keys($card-widths), ', ')}";
  }
}

@mixin mq($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value {
    @media (max-width: #{$value}px) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint '#{$breakpoint}' provided. Allowed breakpoints: #{map-keys($breakpoints)}";
  }
}


@mixin modal($size: "md") {
  @include flex-col;
  width: 100%;
  gap: 16px;

  @if index($valid-modal-sizes, $size) {
    @if $size == "sm" {
      max-width: $modal-sm-width;
    } @else if $size == "fit" {
      width: $modal-fit-width;
    } @else {
      max-width: $modal-width;
    }
  } @else {
    @error "Invalid size '#{$size}' provided. Allowed sizes: #{join($valid-modal-sizes, ', ')}";
  }

  @include mq("sm") {
    max-width: $mobile-modal-width;
  }
}

@mixin scrollbar {
  /* width */
  ::-webkit-scrollbar {
    width: 8px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: transparent;
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: $muted-color;
    border-radius: $border-rounded;

  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: darken($muted-color, 10%);
  }
}